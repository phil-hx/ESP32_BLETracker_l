; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = main


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                 ENVIRONMENT CHOICE                                   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Uncomment the env line corresponding to your board and modules required,              ;
;you can also adapt the modules by removing the corresponding lines in the env detail  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

default_envs = esp32dev-ble-release

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                              ENVIRONMENTS PARAMETERS                                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Libraries and parameters shared accross environements                                 ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[libraries]
pubsubclient = PubSubClient@2.8
regexp  =  Regexp@0.1.0
arduinoJson = bblanchon/ArduinoJson@^6.21.3
tzinfo = https://github.com/shogunxam/ezTime.git
;ble = https://github.com/shogunxam/ESP32-BLE-Arduino

[env]
framework = arduino
lib_deps = 
  ${libraries.pubsubclient}
  ${libraries.arduinoJson}
  ${libraries.tzinfo}
;  ${libraries.ble}

build_flags =
  ;-w ; supress all warnings
   -DBOARD_HAS_PSRAM
 	-D CONFIG_SUPPORT_STATIC_ALLOCATION=1
	-D CONFIG_SPIRAM_USE_MALLOC=1
  ;-D CONFIG_SPIRAM_USE_CAPS_ALLOC=1 # no effect
	-D CONFIG_SPIRAM_TYPE_AUTO=1
	-D CONFIG_SPIRAM_SIZE=-1
	-D CONFIG_SPIRAM_SPEED_80M=1
	-D CONFIG_SPIRAM_MEMTEST=1
	-D CONFIG_SPIRAM_CACHE_WORKAROUND=1
	-D CONFIG_SPIRAM_BANKSWITCH_ENABLE=1
	;-D CONFIG_SPIRAM_BANKSWITCH_RESERVE=4
	-D CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL=4096
	;-D CONFIG_SPIRAM_MALLOC_RESERVE_INTERNAL=16384
  -D CONFIG_SPIRAM_ALLOW_BSS_SEG_EXTERNAL_MEMORY=1
	;-D CONFIG_SPIRAM_BOOT_INIT=1 # PB
  ;-D CONFIG_SPIRAM_SUPPORT=1  # PB
	;-D board_upload.flash_size = 8MB
	#-D CONFIG_WIFI_LWIP_ALLOCATION_FROM_SPIRAM_FIRST=1


monitor_speed = 115200
monitor_filters = esp32_exception_decoder 

extra_scripts = 
  pre:./htmlcompress.py


[env:debug]
platform = espressif32
board = esp-wrover-kit
debug_tool = esp-bridge

[com]
#arduino-esp32 1.0.5-rc7
esp32_platform = espressif32
#esp32_platform = https://github.com/shogunxam/platform-espressif32.git#13a6a65fda58242ba3e10a7663fe07a2163c9f2f
#esp32_platform = https://github.com/shogunxam/platform-espressif32.git#de37573e5191f868438c4e584c97b5df5930c830
#arduino-esp32 2020 November 15 fix WebServer for Chrome
#esp32_platform = https://github.com/shogunxam/platform-espressif32.git#7b7e106ac498e86cb4b61323b771af3718f3a028
esp32_board = esp-wrover-kit

[com-esp]
lib_deps =
  ${env.lib_deps}
build_flags =
  ${env.build_flags}
  -DMQTT_MAX_PACKET_SIZE=1024

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                                 ENVIRONMENTS LIST                                    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;List of environments that can be build                                                ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;RELEASE ENVIRONMENT
[env:esp32dev-ble-release]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = ${com.esp32_board}
board_build.partitions = min_spiffs.csv
build_type = release
lib_deps =
  ${com-esp.lib_deps}
build_flags = 
  ${com-esp.build_flags}
  '-DCORE_DEBUG_LEVEL=0'

;DEBUG ENVIRONMENT
[env:esp32dev-ble-debug]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = ${com.esp32_board} 
board_build.arduino.memory_type = qio_qspi
board_build.partitions = huge_app_min_spiffs.csv
build_type = debug
lib_deps =
  ${com-esp.lib_deps}
build_flags = 
  ${com-esp.build_flags}
  '-DDEBUG_SERIAL'
  '-DDEBUG'
  ;ENABLE for loglevel info
  '-DCORE_DEBUG_LEVEL=0'
  ;ENABLE for loglevel debug
  ;-D CORE_DEBUG_LEVEL=5
  ;'-DBOARD_HAS_PSRAM=TRUE'
debug_tool = esp-bridge


;DEBUG ENVIRONMENT
[env:esp32S3-ble-debug]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = 4d_systems_esp32s3_gen4_r8n16
board_build.mcu = esp32s3
board_build.arduino.memory_type = qio_opi
board_build.partitions = default_16MB.csv
board_build.f_flash = 80000000L
board_build.flash_mode = qio
build_type = debug
lib_deps =
  ${com-esp.lib_deps}
build_flags = 
  ${com-esp.build_flags}
  '-DDEBUG_SERIAL'
  '-DDEBUG'
  ;ENABLE for loglevel info
  '-DCORE_DEBUG_LEVEL=0'
  ;ENABLE for loglevel debug
  ;-D CORE_DEBUG_LEVEL=5
  ;'-DBOARD_HAS_PSRAM=TRUE'
debug_tool = esp-bridge
upload_speed = 921600


[env:esp32WROOM-dev-ble-debug]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = upesy_wroom
board_build.arduino.memory_type = qio_qspi
board_build.partitions = huge_app_min_spiffs.csv
build_type = debug
lib_deps =
  ${com-esp.lib_deps}
build_flags = 
  ;-w
  '-DDEBUG_SERIAL'
  '-DDEBUG'
  ;ENABLE for loglevel info
  ;'-DCORE_DEBUG_LEVEL=0'
  ;ENABLE for warning info
  '-DCORE_DEBUG_LEVEL=1'
  ;ENABLE for loglevel debug
  ;'-DCORE_DEBUG_LEVEL=6'
  ;'-DBOARD_HAS_PSRAM=TRUE'
debug_tool = esp-bridge

[env:esp32dev-ble-fhem-release]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = ${com.esp32_board}
board_build.partitions = min_spiffs.csv
build_type = release
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.regexp}
build_flags = 
  ${com-esp.build_flags}
  '-DUSE_MQTT=false'
  '-DUSE_FHEM_LEPRESENCE_SERVER=true'
  '-DCORE_DEBUG_LEVEL=0'

[env:esp32dev-ble-fhem-debug]
;extra_scripts =
;  pre:htmlcompress.py
platform = ${com.esp32_platform}
board = ${com.esp32_board}
board_build.partitions = min_spiffs.csv
build_type = debug
lib_deps =
  ${com-esp.lib_deps}
  ${libraries.regexp}
build_flags = 
  ${com-esp.build_flags}
  '-DUSE_MQTT=false'
  '-DUSE_FHEM_LEPRESENCE_SERVER=true'
  '-DCORE_DEBUG_LEVEL=0'
  '-DDEBUG_SERIAL'
  '-DDEBUG'
  '-DconfigUSE_MALLOC_FAILED_HOOK=1'
  '-DconfigCHECK_FOR_STACK_OVERFLOW=1'
